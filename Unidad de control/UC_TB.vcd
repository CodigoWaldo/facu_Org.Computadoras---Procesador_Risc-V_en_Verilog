$date
	Sun Nov 17 19:16:17 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module UC_TB $end
$var wire 2 ! resultSrc_test [1:0] $end
$var wire 1 " regWrite_test $end
$var wire 1 # pcSrc_test $end
$var wire 1 $ memWrite_test $end
$var wire 2 % immSrc_test [1:0] $end
$var wire 1 & aluSrc_test $end
$var wire 3 ' aluControl_test [2:0] $end
$var parameter 32 ( DURATION $end
$var reg 3 ) f3_test [2:0] $end
$var reg 7 * f7_test [6:0] $end
$var reg 7 + op_test [6:0] $end
$var reg 1 , zero_test $end
$scope module UC_UUT $end
$var wire 3 - f3 [2:0] $end
$var wire 7 . f7 [6:0] $end
$var wire 7 / op [6:0] $end
$var wire 1 # pcSrc $end
$var wire 1 , zero $end
$var wire 2 0 resultSrc [1:0] $end
$var wire 1 " regWrite $end
$var wire 1 $ memWrite $end
$var wire 1 1 jump $end
$var wire 2 2 immSrc [1:0] $end
$var wire 1 3 branch $end
$var wire 1 & aluSrc $end
$var wire 2 4 aluOp [1:0] $end
$var wire 3 5 aluControl [2:0] $end
$scope module alu_deco_inst $end
$var wire 3 6 aluControl [2:0] $end
$var wire 3 7 f3 [2:0] $end
$var wire 7 8 f7 [6:0] $end
$var wire 7 9 op [6:0] $end
$var wire 2 : aluOp [1:0] $end
$var reg 3 ; aluControlAux [2:0] $end
$upscope $end
$scope module m_deco_inst $end
$var wire 2 < aluOp [1:0] $end
$var wire 1 & aluSrc $end
$var wire 2 = immSrc [1:0] $end
$var wire 1 $ memWrite $end
$var wire 7 > op [6:0] $end
$var wire 1 " regWrite $end
$var wire 2 ? resSrc [1:0] $end
$var wire 1 1 jump $end
$var wire 1 3 branch $end
$var reg 2 @ aluOpAux [1:0] $end
$var reg 1 A aluSrcAux $end
$var reg 1 3 branchAux $end
$var reg 2 B immSrcAux [1:0] $end
$var reg 1 1 jumpAux $end
$var reg 1 C memWriteAux $end
$var reg 1 D regWriteAux $end
$var reg 2 E resSrcAux [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 (
$end
#0
$dumpvars
b1 E
1D
0C
b0 B
1A
b0 @
b1 ?
b11 >
b0 =
b0 <
b0 ;
b0 :
b11 9
b0 8
b0 7
b0 6
b0 5
b0 4
03
b0 2
01
b1 0
b11 /
b0 .
b0 -
1,
b11 +
b0 *
b0 )
b0 '
1&
b0 %
0$
0#
1"
b1 !
$end
#100000
b10 '
b10 5
b10 6
b10 ;
b10 4
b10 :
b10 <
b10 @
0&
0A
b0 !
b0 0
b0 ?
b0 E
b110011 +
b110011 /
b110011 9
b110011 >
b111 )
b111 -
b111 7
#200000
b1 '
b1 5
b1 6
b1 ;
b0 )
b0 -
b0 7
b110000 *
b110000 .
b110000 8
#1200000
